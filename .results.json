{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 0,
    "pending": 0,
    "failures": 2,
    "start": "2019-12-03T21:11:57.027Z",
    "end": "2019-12-03T21:12:01.039Z",
    "duration": 4012
  },
  "tests": [
    {
      "title": "must return password with length 140",
      "fullTitle": "\"$ node password 140 1\" command must return password with length 140",
      "duration": 2001,
      "currentRetry": 0,
      "err": {
        "stack": "Error: timeout of 2000ms exceeded. Ensure the done() callback is being called in this test.",
        "message": "timeout of 2000ms exceeded. Ensure the done() callback is being called in this test."
      }
    },
    {
      "title": "must return password with length 10",
      "fullTitle": "\"$ node password 10 2\" command must return password with length 10",
      "duration": 2003,
      "currentRetry": 0,
      "err": {
        "stack": "Error: timeout of 2000ms exceeded. Ensure the done() callback is being called in this test.",
        "message": "timeout of 2000ms exceeded. Ensure the done() callback is being called in this test."
      }
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "must return password with length 140",
      "fullTitle": "\"$ node password 140 1\" command must return password with length 140",
      "duration": 2001,
      "currentRetry": 0,
      "err": {
        "stack": "Error: timeout of 2000ms exceeded. Ensure the done() callback is being called in this test.",
        "message": "timeout of 2000ms exceeded. Ensure the done() callback is being called in this test."
      }
    },
    {
      "title": "must return password with length 10",
      "fullTitle": "\"$ node password 10 2\" command must return password with length 10",
      "duration": 2003,
      "currentRetry": 0,
      "err": {
        "stack": "Error: timeout of 2000ms exceeded. Ensure the done() callback is being called in this test.",
        "message": "timeout of 2000ms exceeded. Ensure the done() callback is being called in this test."
      }
    }
  ],
  "passes": []
}